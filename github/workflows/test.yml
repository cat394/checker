name: Deno Tests

on:
  push:
    paths:
      - 'packages/**'
  pull_request:
    paths:
      - 'packages/**'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package-path:
          - packages/string
          - packages/number
          - packages/boolean
          - packages/object
          - packages/array
          - packages/utils

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Deno v1.x
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      - name: Check format for ${{ matrix.package-path }}
        working-directory: ${{ matrix.package-path }}
        run: deno fmt --check

      - name: Check lint errors for ${{ matrix.package-path }}
        working-directory: ${{ matrix.package-path }}
        run: deno lint

      - name: Run tests for ${{ matrix.package-path }}
        working-directory: ${{ matrix.package-path }}
        run: deno test



name: Run Tests

on:
  push:
    paths:
      - 'packages/**'
  pull_request:
    paths:
      - 'packages/**'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package-path:
          - packages/string
          - packages/number
          - packages/boolean
          - packages/object
          - packages/array
          - packages/utils
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - run: npm install

      - name: Run tests for ${{ matrix.package-path }}
        run: npm run test --workspaces=${{ matrix.package-path }}
